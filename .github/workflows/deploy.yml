name: Deploy RDS PostgreSQL Infra

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Set up Python (for AWS CLI/Terraform)
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install AWS CLI
        run: |
          pip install awscli

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.FIAP_POS_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.FIAP_POS_AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.FIAP_POS_AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.FIAP_POS_AWS_REGION }}

      # Exemplo para Terraform (ajuste conforme sua stack)
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Terraform Init
        working-directory: infra
        run: terraform init

      - name: Terraform Plan
        working-directory: infra
        run: terraform plan
        env:
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}

      - name: Terraform Apply
        working-directory: infra
        run: terraform apply -auto-approve
        env:
          AWS_ROLE_ARN: ${{ secrets.FIAP_POS_AWS_ROLE_ARN }}
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}

      - name: Get RDS Endpoint
        id: rds_output
        working-directory: infra
        run: |
          echo "endpoint=$(terraform output -raw rds_endpoint)" >> $GITHUB_OUTPUT
          echo "database_name=$(terraform output -raw database_name)" >> $GITHUB_OUTPUT

      # Seeds SQL (ajuste conforme sua estrat√©gia)
      - name: Run SQL seeds
        if: success()
        working-directory: seeds
        run: |
          # Instalar PostgreSQL client
          sudo apt-get update && sudo apt-get install -y postgresql-client

          # Aguardar RDS estar dispon√≠vel
          echo "üïê Aguardando RDS estar dispon√≠vel..."
          sleep 60

          # Executar seeds
          ./run-seeds.sh
        env:
          AWS_ROLE_ARN: ${{ secrets.FIAP_POS_AWS_ROLE_ARN }}
          DB_HOST: ${{ steps.rds_output.outputs.endpoint }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ steps.rds_output.outputs.database_name }}

      - name: Done
        run: echo "Deploy e seed finalizados."
